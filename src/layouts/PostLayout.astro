---
import { Head } from 'astro-capo'
import { fade } from 'astro:transitions'
import { Moon } from 'lunarphase-js'
import BaseHead from '../components/BaseHead.astro'
import '../styles/layout_post.js'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import FormattedDate from '../components/FormattedDate.astro'
import OutdateTip from '../components/OutdateTip.astro'
// import PictureZoom from '../components/PictureZoom.svelte'
import ProseScript from '../components/ProseScript.astro'
import siteInfo from '../consts.ts'
import { formatISOString, getHemisphere } from '../utilities/date.utils.js'
// import { getPostDescription } from '../utilities/generateRSSFeed.js'
import SegmentService from '../utilities/render.ts'

const { post, updatedDate } = Astro.props
const { data, slug } = post

const isOld =
  data.publishDate < new Date(Date.now() - 31536000000) &&
  (updatedDate === undefined ||
    updatedDate < new Date(Date.now() - 31536000000))
const metaDescription = data.abstract ?? siteInfo.description // getPostDescription(post)
const prevPage = data.prev ? data.prev : undefined
const nextPage = data.next ? data.prev : undefined
const prevPageTitle = data.prevTitle ? data.prevTitle : 'previous page'
const nextPageTitle = data.nextTitle ? data.nextTitle : 'next page'
const hasRecommendations = prevPage || nextPage
const postDate = formatISOString(data.publishDate)
const moonEmoji = Moon.lunarPhaseEmoji(new Date(postDate), {
  hemisphere: getHemisphere(data.publishDate), // Hemisphere.NORTHERN,
})
const encoder = new TextEncoder()
const bytes = encoder.encode(post.body).byteLength

const pageInfo = {
  title: data.title,
  abstract: metaDescription,
  isIndex: data.isIndex,
  publishDate: data.publishDate,
  updatedDate: updatedDate ? updatedDate : undefined,
  prev: prevPage,
  next: nextPage,
  prevTitle: prevPageTitle,
  nextPageTitle: nextPageTitle,
}
---

<!doctype html>
<html
  dir='ltr'
  lang={siteInfo.langFull}
  class='han-init'
  prefix='og: https://ogp.me/ns# article: https://ogp.me/ns/article# rdfs: http://www.w3.org/2000/01/rdf-schema#'
>
  <Head>
    <BaseHead {pageInfo} />
    {
      pageInfo.isIndex === false ? (
        <meta
          name='robots'
          content='noindex, noimageindex, nofollow, noarchive, noai, noimageai'
        />
      ) : (
        <meta
          name='robots'
          content='index, noimageindex, follow, noarchive, noai, noimageai, max-snippet:-1, max-video-preview:-1, max-image-preview:large'
        />
      )
    }
    <slot name='meta' />
  </Head>
  <body>
    <div class='container'>
      <Header />
      <!-- TODO: microformats
    - https://developer.mozilla.org/en-US/docs/Web/HTML/microformats
    - https://developers.google.com/search/docs/appearance/structured-data/article
    - https://www.w3.org/TR/xhtml-rdfa-primer/#default_prefixes
    -->
      <main id='main-content'>
        <article class='h-entry'>
          <!-- 1.1 post title -->
          <h1
            class='entry-title p-name'
            data-pagefind-meta='title'
            transition:name={`blog-${slug}-title`}
            transition:animate={fade({ duration: 1000 })}
          >
            <Fragment set:html={SegmentService.segment(data.title)} />
          </h1>
          <!-- 1.2 post timestamp ( 1.moon phases emoji  2.date ) -->
          <ul class='post-metadata'>
            <li>
              <span class='screen-reader'>Posted on </span>{moonEmoji}
              <FormattedDate date={data.publishDate} />
            </li>
            <li>
              <!-- updatedDate -->
              {
                data.updatedDate && (
                  <Fragment>
                    {/* • · */}
                    <span class='post-metadata-text'>Updated on</span>
                    <FormattedDate
                      date={data.updatedDate}
                      class='dt-updated'
                      itemprop='dateUpdated'
                    />
                  </Fragment>
                )
              }
            </li>
          </ul>

          <!-- 2. <div>entry content</div> -->
          <div
            class='entry-content e-content heti generated'
            data-pagefind-body
            data-pagefind-meta='kind:weblog'
          >
            {isOld ? <OutdateTip /> : null}
            <slot />
          </div><!-- .entry-content .e-content -->
          {bytes} bytes
        </article>

        <!-- 左箭頭：&larr; / &laquo;&nbsp;  v.  右箭頭&rarr; / &nbsp;&raquo; -->
        {
          hasRecommendations && (
            <nav
              id='post-pagination'
              aria-label='Pagination'
              data-pagefind-ignore
            >
              <h2>Read Next</h2>
              <ul class='links-nextprev'>
                {prevPage && (
                  <li>
                    Previous:
                    <a
                      data-astro-prefetch
                      href={prevPage}
                      rel='prev'
                      aria-label='Go to previous page'
                    >
                      <Fragment
                        set:html={SegmentService.segment(prevPageTitle)}
                      />
                    </a>
                  </li>
                )}
                {nextPage && (
                  <li>
                    Next:
                    <a
                      data-astro-prefetch
                      href={nextPage}
                      rel='next'
                      aria-label='Go to next page'
                    >
                      <Fragment
                        set:html={SegmentService.segment(nextPageTitle)}
                      />
                    </a>
                  </li>
                )}
              </ul>
            </nav>
          )
        }
      </main>
      <Footer />
    </div><!-- .container -->
    <!-- TODO: ProseScript -->
    <!-- https://github.com/wry-red/site/blob/main/src/components/ProseScript.astro -->
    <slot name='footer' />
    <ProseScript />
    <!-- <PictureZoom client:load /> -->
  </body><!--
  <style is:inline>
    .entry-content:global(.js-enabled p > img),
    .entry-content:global(.js-enabled figure img) {
      transition: 0.25s;
    }

    .entry-content:global(.js-enabled p > img:hover),
    .entry-content:global(.js-enabled figure img:hover) {
      transform: scale(1.03);
      cursor: pointer;
    }

    .overlay-image {
      display: flex;
      justify-content: center;
      align-items: center;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: #000a;
    }

    .overlay-image img {
      max-height: 80%;
      max-width: 80%;
    }
  </style>
-->
</html>
