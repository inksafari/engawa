---
// import { Intl, Temporal } from '@js-temporal/polyfill'
// import { getFormattedDate } from '~/utilities/date.utils'
import {
  formatISOString,
  formatDateString,
  yearPast,
} from '~/utilities/date.utils'

// type Props = HTMLAttributes<'time'> & {
interface Props extends astroHTML.JSX.TimeHTMLAttributes {
  date: Date // Temporal.PlainDate | Date
  // dateTimeOptions?: Intl.DateTimeFormatOptions
  class?: string
  itemprop?: string
}

const {
  class: className = 'dt-published',
  itemprop: itemProp = 'datePublished',
} = Astro.props
// let date = new Date(Astro.props.date)
// const dateTimeOptions = Astro.props.dateTimeOptions
// const readableDate = getFormattedDate(date, dateTimeOptions)
const readableDate = formatDateString(Astro.props.date)
---

<time
  class={className}
  datetime={formatISOString(Astro.props.date)}
  itemprop={itemProp}
  data-pagefind-meta='date[datetime]'
>
  {readableDate}
  <div class='screen-reader screen-reader-focusable'>
    ({yearPast(Astro.props.date)} of the year has passed)
  </div>
</time>
