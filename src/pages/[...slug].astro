---
export const prerender = true;
//import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
//import PageLayout from '~/layouts/PageLayout.astro';
import PostLayout from '~/layouts/PostLayout.astro';
import VertLayout from '~/layouts/VertLayout.astro';
import { fetchPosts } from '~/utilities/getPosts';

export interface Props {
  entry: CollectionEntry<'page'> | CollectionEntry<'then'>;
}

export async function getStaticPaths() {
  //const pages = await getCollection('page', (entry) => {
  //return !['home'].includes(entry.slug) && !entry.data.isDraft;
  //});
  const posts = await fetchPosts({ collection: 'then' });

  //return [...pages, ...posts].map((entry) => ({
  return [...posts].flatMap((entry) => ({
    params: { slug: String(entry.slug) },
    props: { entry },
  }));
}

const { entry, ...attributes } = Astro.props as Props;
const { Content, remarkPluginFrontmatter } = await entry.render();
---

{
  //entry.collection === 'page' ? (
  //<PageLayout {...entry.data}>
  //<Content />
  //</PageLayout>
  //) :
  entry.collection === 'then' ? (
    <PostLayout {...entry.data}>
      <Content />
    </PostLayout>
  ) : (
    <VertLayout {...attributes}>
      <Content />
    </VertLayout>
  )
}
<!--
  @source: https://github.com/tonydangblog/blog/blob/main/apps/frontend/src/pages/%5B...slug%5D.astro
-->
